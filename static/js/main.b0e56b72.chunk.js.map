{"version":3,"sources":["components/navbar/navbar.jsx","components/dropdown/dropdown.jsx","components/fibonachi/fibonachi.jsx","components/button/button.jsx","components/toogle/toogle.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Dropdown","currentNumber","onChange","options","Array","keys","useState","isOptionsShown","setIsOptionsShown","toggleOptions","useCallback","chooseOption","number","type","onClick","classNames","map","option","Fibonachi","setNumber","fibonachiList","setFibonachiList","fibonachiMemo","fibonachi","n","length","slice","previous","push","useEffect","join","Button","toggle","children","isActive","class","Toogle","jeepsIsActive","setJeepsIsActive","toggleButtons","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAeeA,G,MAZA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,qDACA,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,4BACA,cAAC,IAAD,CAAMA,GAAG,UAAT,4B,wCC+BDC,EApCE,SAAC,GAA8B,EAA7BC,cAA8B,IAAfC,EAAc,EAAdA,SACxBC,EAAO,YAAOC,MAAM,KAAKC,QADa,EAEAC,oBAAS,GAFT,mBAErCC,EAFqC,KAErBC,EAFqB,KAItCC,EAAgBC,uBAAY,WAC9BF,GAAmBD,KACpB,CAACA,EAAgBC,IAEdG,EAAeD,uBAAY,SAACE,GAC9BV,EAASU,GACTH,MACD,CAACP,EAAUO,IACd,OACI,sBAAKX,UAAU,WAAf,UACI,wBACIe,KAAK,SACLf,UAAU,mBACVgB,QAAWL,EAHf,0BAKA,qBAAKX,UAAWiB,IAAW,oBAAqB,CAAC,MAAUR,IAA3D,SACKJ,EAAQa,KAAI,SAAAC,GAAM,OACf,wBACIJ,KAAK,SACLf,UAAU,mBACVgB,QAAS,kBAAMH,EAAaM,IAHhC,SAMKA,GAFIA,YCIdC,EA9BG,WAAO,IAAD,EACeZ,mBAAS,GADxB,mBACbL,EADa,KACEkB,EADF,OAEsBb,mBAAS,IAF/B,mBAEbc,EAFa,KAEEC,EAFF,KAOdC,EAAgB,CAAC,EAAE,GACnBC,EAAY,SAAZA,EAAaC,GACf,GAAIA,EAAIF,EAAcG,OACtB,OAAOH,EAAcI,MAAM,EAAGF,EAAE,GAEhC,IAAMG,EAAQ,YAAOJ,EAAUC,EAAI,IAGnC,OAFAG,EAASC,KAAKD,EAASH,EAAE,GAAKG,EAASH,EAAE,IAElCG,GAOb,OAJAE,qBAAU,WACRR,EAAiBE,EAAUtB,GAAe6B,KAAK,QAC9C,CAAC7B,IAGA,sBAAKH,UAAU,iBAAf,UACI,cAAC,EAAD,CAAUG,eAAa,EAACC,SArBb,SAACU,GACdO,EAAUP,MAqBV,qBAAKd,UAAU,SAAf,SAAyBsB,QCZlBW,G,MAbA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAM/B,OACI,qBAAKC,MAAOpB,IAAW,SAAU,CAAC,UAAWmB,IAAYrB,KAAK,SAASC,QAN3D,WACPoB,GACDF,KAIJ,SACKC,MCMEG,G,MAbA,WAAO,IAAD,EACyB9B,oBAAS,GADlC,mBACV+B,EADU,KACKC,EADL,KAEXC,EAAgB,WAClBD,GAAkBD,IAEtB,OACI,sBAAKF,MAAM,SAAX,UACI,cAAC,EAAD,CAAQD,SAAUG,EAAeL,OAAQO,EAAzC,mBACA,cAAC,EAAD,CAAQL,UAAWG,EAAeL,OAAQO,EAA1C,yBCiBGC,MAtBf,WAEE,OACE,cAAC,IAAD,UACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,iBCPCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0e56b72.chunk.js","sourcesContent":["import './navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>Mykola Chepkyi Task</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Fibonachi task</Link>\r\n                <Link to=\"/toogle\">Toggle</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import './dropdown.css';\r\nimport {useState, useCallback} from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nconst Dropdown = ({currentNumber, onChange}) => {\r\n    const options = [...Array(100).keys()];\r\n    const [isOptionsShown, setIsOptionsShown] = useState(false);\r\n\r\n    const toggleOptions = useCallback(() => {\r\n        setIsOptionsShown(!isOptionsShown)\r\n    }, [isOptionsShown, setIsOptionsShown]);\r\n\r\n    const chooseOption = useCallback((number)=>{\r\n        onChange(number); \r\n        toggleOptions();\r\n    }, [onChange, toggleOptions]);\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <button \r\n                type='button' \r\n                className='dropdown__button' \r\n                onClick = {toggleOptions}\r\n            >Chose number</button>\r\n            <div className={classNames('dropdown__content', {'shown' : isOptionsShown})}>\r\n                {options.map(option => \r\n                    <button \r\n                        type='button' \r\n                        className='dropdown__option' \r\n                        onClick={() => chooseOption(option)}\r\n                        key={option}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Dropdown;","import {useState, useEffect} from 'react';\r\nimport Dropdown from '../dropdown/dropdown';\r\n\r\nconst Fibonachi = () => {\r\n    const [currentNumber, setNumber] = useState(0);\r\n    const [fibonachiList, setFibonachiList] = useState([]);\r\n    const onChange = (number) => {\r\n        setNumber(number)\r\n    };\r\n  \r\n    const fibonachiMemo = [0,1];\r\n    const fibonachi = (n) => {\r\n        if (n < fibonachiMemo.length) {\r\n        return fibonachiMemo.slice(0, n+1);\r\n        }\r\n        const previous = [...fibonachi(n - 1)];\r\n        previous.push(previous[n-1] + previous[n-2]);\r\n        \r\n        return previous;\r\n    }\r\n\r\n  useEffect(()=>{\r\n    setFibonachiList(fibonachi(currentNumber).join(' '));\r\n  }, [currentNumber]);\r\n\r\n  return (\r\n      <div className='fibonachi-page'>\r\n          <Dropdown currentNumber onChange={onChange}/>\r\n        <div className='result'>{fibonachiList}</div>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Fibonachi;","import './button.css';\r\nimport classNames from \"classnames\";\r\n\r\nconst Button = ({toggle, children, isActive}) => {\r\n    const onClick = () => {\r\n        if (!isActive) {\r\n            toggle();\r\n        }\r\n    }\r\n    return (\r\n        <div class={classNames('button', {'-active': isActive})} type='button' onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import Button from \"../button/button\";\r\nimport {useState} from 'react';\r\nimport './toogle.css';\r\n\r\nconst Toogle = () => {\r\n    const [jeepsIsActive, setJeepsIsActive] = useState(true);\r\n    const toggleButtons = () => {\r\n        setJeepsIsActive(!jeepsIsActive);\r\n    }  \r\n    return (\r\n        <div class='toogle'>\r\n            <Button isActive={jeepsIsActive} toggle={toggleButtons}>Jeeps</Button>\r\n            <Button isActive={!jeepsIsActive} toggle={toggleButtons}>Trucks</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toogle;","import './App.css';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/navbar/navbar';\nimport Fibonachi from './components/fibonachi/fibonachi';\nimport Toogle from './components/toogle/toogle';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='content'>\n          <Switch>\n            <Route exact path='/'>\n              <Fibonachi />\n            </Route>\n            <Route path='/toogle'>\n              <Toogle/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}